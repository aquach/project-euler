x1 = 0
y1 = 10.1
x2 = 1.4
y2 = -9.6

num_hits = 1

loop do
    sx1 = -((-4096*x2**7*y1**3 + 2048*x1*x2**6*y1**2*y2 + 10240*x2**7*y1**2*y2 + 1024*x1**2*x2**5*y1*y2**2 - 6144*x1*x2**6*y1*y2**2 - 7168*x2**7*y1*y2**2 - 1280*x2**5* y1**3*y2**2 - 512*x1**3*x2**4* y2**3 + 512*x1**2*x2**5*y2**3 + 2560*x1*x2**6*y2**3 + 1536*x2**7* y2**3 + 2048*x1*x2**4*y1**2*y2**3 + 1792*x2**5*y1**2*y2**3 - 832*x1**2*x2**3*y1*y2**4 - 2432*x1*x2**4*y1*y2**4 - 576*x2**5*y1*y2**4 + 208*x2**3*y1**3* y2**4 + 64*x1**3*x2**2*y2**5 + 640*x1**2*x2**3*y2**5 + 576*x1*x2**4*y2**5 - 152*x1*x2**2* y1**2*y2**5 - 472*x2**3*y1**2* y2**5 + 16*x1**2*x2*y1*y2**6 + 272*x1*x2**2*y1*y2**6 + 336*x2**3*y1*y2**6 - 7*x2*y1**3* y2**6 - 16*x1**2*x2*y2**7 - 120*x1*x2**2*y2**7 - 72*x2**3* y2**7 + x1*y1**2*y2**7 + 20*x2*y1**2*y2**7 - 2*x1*y1*y2**8 - 19*x2*y1*y2**8 + x1*y2**9 + 6*x2*y2**9 - 32*x1*x2**2* Math.sqrt(-((8*x2**2*(2*y1 - y2) - 8*x1*x2*y2 + y2**2* (-y1 + y2))**2* (-25*(y1 - y2)**2*y2**4 + 64*x2**6*(-400 + 4*y1**2 - 12*y1*y2 + 9*y2**2) + x1**2*(64*x2**4*(-400 + y2** 2) - 16*x2**2*y2**2* (-100 + y2**2) + y2**4*(-100 + y2**2)) + x2**2*y2**2*(36*y2**2*(-125 + y2**2) + 7*y1**2*(-800 + 7* y2**2) + y1*(10000*y2 - 84* y2**3)) + 16*x2**4* (6*y2**2*(-250 + 3*y2**2) + 2*y1**2*(-200 + 7*y2**2) + y1*(2000*y2 - 33*y2**3)) + 2*x1*x2*(64*x2**4*(400 + 2* y1*y2 - 3*y2**2) + y2**3*(-500*y2 + 6*y2**3 + y1*(600 - 7*y2**2)) + 8*x2**2*y2*(1000*y2 - 3* y2**3 + 5*y1*(-240 + y2**2)))))) + 32*x2**3*Math.sqrt( -((8*x2**2*(2*y1 - y2) - 8*x1*x2*y2 + y2**2* (-y1 + y2))**2* (-25*(y1 - y2)**2*y2**4 + 64*x2**6*(-400 + 4*y1**2 - 12*y1*y2 + 9*y2**2) + x1**2*(64*x2**4*(-400 + y2** 2) - 16*x2**2*y2**2* (-100 + y2**2) + y2**4*(-100 + y2**2)) + x2**2*y2**2*(36*y2**2*(-125 + y2**2) + 7*y1**2*(-800 + 7* y2**2) + y1*(10000*y2 - 84* y2**3)) + 16*x2**4* (6*y2**2*(-250 + 3*y2**2) + 2*y1**2*(-200 + 7*y2**2) + y1*(2000*y2 - 33*y2**3)) + 2*x1*x2*(64*x2**4*(400 + 2* y1*y2 - 3*y2**2) + y2**3*(-500*y2 + 6*y2**3 + y1*(600 - 7*y2**2)) + 8*x2**2*y2*(1000*y2 - 3* y2**3 + 5*y1*(-240 + y2**2)))))) - 16*x2*y1*y2* Math.sqrt(-((8*x2**2*(2*y1 - y2) - 8*x1*x2*y2 + y2**2* (-y1 + y2))**2* (-25*(y1 - y2)**2*y2**4 + 64*x2**6*(-400 + 4*y1**2 - 12*y1*y2 + 9*y2**2) + x1**2*(64*x2**4*(-400 + y2** 2) - 16*x2**2*y2**2* (-100 + y2**2) + y2**4*(-100 + y2**2)) + x2**2*y2**2*(36*y2**2*(-125 + y2**2) + 7*y1**2*(-800 + 7* y2**2) + y1*(10000*y2 - 84* y2**3)) + 16*x2**4* (6*y2**2*(-250 + 3*y2**2) + 2*y1**2*(-200 + 7*y2**2) + y1*(2000*y2 - 33*y2**3)) + 2*x1*x2*(64*x2**4*(400 + 2* y1*y2 - 3*y2**2) + y2**3*(-500*y2 + 6*y2**3 + y1*(600 - 7*y2**2)) + 8*x2**2*y2*(1000*y2 - 3* y2**3 + 5*y1*(-240 + y2**2)))))) + 2*x1*y2**2* Math.sqrt(-((8*x2**2*(2*y1 - y2) - 8*x1*x2*y2 + y2**2* (-y1 + y2))**2* (-25*(y1 - y2)**2*y2**4 + 64*x2**6*(-400 + 4*y1**2 - 12*y1*y2 + 9*y2**2) + x1**2*(64*x2**4*(-400 + y2** 2) - 16*x2**2*y2**2* (-100 + y2**2) + y2**4*(-100 + y2**2)) + x2**2*y2**2*(36*y2**2*(-125 + y2**2) + 7*y1**2*(-800 + 7* y2**2) + y1*(10000*y2 - 84* y2**3)) + 16*x2**4* (6*y2**2*(-250 + 3*y2**2) + 2*y1**2*(-200 + 7*y2**2) + y1*(2000*y2 - 33*y2**3)) + 2*x1*x2*(64*x2**4*(400 + 2* y1*y2 - 3*y2**2) + y2**3*(-500*y2 + 6*y2**3 + y1*(600 - 7*y2**2)) + 8*x2**2*y2*(1000*y2 - 3* y2**3 + 5*y1*(-240 + y2**2)))))) + 14*x2*y2**2* Math.sqrt(-((8*x2**2*(2*y1 - y2) - 8*x1*x2*y2 + y2**2* (-y1 + y2))**2* (-25*(y1 - y2)**2*y2**4 + 64*x2**6*(-400 + 4*y1**2 - 12*y1*y2 + 9*y2**2) + x1**2*(64*x2**4*(-400 + y2** 2) - 16*x2**2*y2**2* (-100 + y2**2) + y2**4*(-100 + y2**2)) + x2**2*y2**2*(36*y2**2*(-125 + y2**2) + 7*y1**2*(-800 + 7* y2**2) + y1*(10000*y2 - 84* y2**3)) + 16*x2**4* (6*y2**2*(-250 + 3*y2**2) + 2*y1**2*(-200 + 7*y2**2) + y1*(2000*y2 - 33*y2**3)) + 2*x1*x2*(64*x2**4*(400 + 2* y1*y2 - 3*y2**2) + y2**3*(-500*y2 + 6*y2**3 + y1*(600 - 7*y2**2)) + 8*x2**2*y2*(1000*y2 - 3* y2**3 + 5*y1*(-240 + y2**2)))))))/ ((8*x2**2*(2*y1 - y2) - 8*x1*x2*y2 + y2**2*(-y1 + y2))* (1024*x2**6 + (y1 - y2)**2*y2**4 + 64*x2**4*(4*y1**2 - 20*y1*y2 + 15*y2**2) + 4*x2**2*y2**2* (56*y1**2 - 100*y1*y2 + 45*y2**2) + 4*x1**2*(256*x2**4 - 16*x2**2*y2**2 + y2**4) - 8*x1*x2*(256*x2**4 + (6*y1 - 5*y2)*y2**3 + 16*x2**2*y2*(-6*y1 + 5*y2)))))

  sy1 = (-2*(-512*x1*x2**5*y1 + 512*x2**6*y1 - 256*x1**2*x2**4*y2 + 1024*x1*x2**5*y2 - 768*x2**6*y2 - 256*x2**4*y1**2*y2 - 320*x1*x2**3* y1*y2**2 + 832*x2**4*y1*y2**2 + 48*x1**2*x2**2*y2**3 + 224*x1*x2**3* y2**3 - 528*x2**4*y2**3 - 112*x2**2*y1**2*y2**3 + 30*x1*x2*y1*y2**4 + 194*x2**2*y1* y2**4 - 2*x1**2*y2**5 - 26*x1*x2*y2**5 - 84*x2**2*y2**5 + Math.sqrt(-((8*x2**2*(2*y1 - y2) - 8*x1*x2*y2 + y2**2*(-y1 + y2))**2*(-25*(y1 - y2)**2* y2**4 + 64*x2**6*(-400 + 4*y1**2 - 12*y1*y2 + 9*y2**2) + x1**2* (64*x2**4*(-400 + y2**2) - 16*x2**2*y2**2*(-100 + y2**2) + y2**4*(-100 + y2**2)) + x2**2*y2**2* (36*y2**2*(-125 + y2**2) + 7*y1**2*(-800 + 7*y2**2) + y1*(10000*y2 - 84*y2**3)) + 16*x2**4*(6*y2**2*(-250 + 3*y2**2) + 2*y1**2* (-200 + 7*y2**2) + y1*(2000*y2 - 33*y2**3)) + 2*x1*x2*(64*x2**4*(400 + 2*y1*y2 - 3*y2**2) + y2**3*(-500*y2 + 6*y2**3 + y1*(600 - 7*y2**2)) + 8*x2**2*y2*(1000*y2 - 3*y2**3 + 5*y1*(-240 + y2**2))))))))/ (1024*x2**6 + (y1 - y2)**2*y2**4 + 64*x2**4*(4*y1**2 - 20*y1*y2 + 15*y2**2) + 4*x2**2*y2**2* (56*y1**2 - 100*y1*y2 + 45*y2**2) + 4*x1**2*(256*x2**4 - 16*x2**2*y2**2 + y2**4) - 8*x1*x2*(256*x2**4 + (6*y1 - 5*y2)* y2**3 + 16*x2**2*y2*(-6*y1 + 5*y2)))

  sx2 = -((-4096*x2**7*y1**3 + 2048*x1*x2**6*y1**2*y2 + 10240*x2**7*y1**2*y2 + 1024*x1**2*x2**5*y1*y2**2 - 6144*x1*x2**6*y1*y2**2 - 7168*x2**7*y1*y2**2 - 1280*x2**5* y1**3*y2**2 - 512*x1**3*x2**4* y2**3 + 512*x1**2*x2**5*y2**3 + 2560*x1*x2**6*y2**3 + 1536*x2**7* y2**3 + 2048*x1*x2**4*y1**2*y2**3 + 1792*x2**5*y1**2*y2**3 - 832*x1**2*x2**3*y1*y2**4 - 2432*x1*x2**4*y1*y2**4 - 576*x2**5*y1*y2**4 + 208*x2**3*y1**3* y2**4 + 64*x1**3*x2**2*y2**5 + 640*x1**2*x2**3*y2**5 + 576*x1*x2**4*y2**5 - 152*x1*x2**2* y1**2*y2**5 - 472*x2**3*y1**2* y2**5 + 16*x1**2*x2*y1*y2**6 + 272*x1*x2**2*y1*y2**6 + 336*x2**3*y1*y2**6 - 7*x2*y1**3* y2**6 - 16*x1**2*x2*y2**7 - 120*x1*x2**2*y2**7 - 72*x2**3* y2**7 + x1*y1**2*y2**7 + 20*x2*y1**2*y2**7 - 2*x1*y1*y2**8 - 19*x2*y1*y2**8 + x1*y2**9 + 6*x2*y2**9 + 32*x1*x2**2* Math.sqrt(-((8*x2**2*(2*y1 - y2) - 8*x1*x2*y2 + y2**2* (-y1 + y2))**2* (-25*(y1 - y2)**2*y2**4 + 64*x2**6*(-400 + 4*y1**2 - 12*y1*y2 + 9*y2**2) + x1**2*(64*x2**4*(-400 + y2** 2) - 16*x2**2*y2**2* (-100 + y2**2) + y2**4*(-100 + y2**2)) + x2**2*y2**2*(36*y2**2*(-125 + y2**2) + 7*y1**2*(-800 + 7* y2**2) + y1*(10000*y2 - 84* y2**3)) + 16*x2**4* (6*y2**2*(-250 + 3*y2**2) + 2*y1**2*(-200 + 7*y2**2) + y1*(2000*y2 - 33*y2**3)) + 2*x1*x2*(64*x2**4*(400 + 2* y1*y2 - 3*y2**2) + y2**3*(-500*y2 + 6*y2**3 + y1*(600 - 7*y2**2)) + 8*x2**2*y2*(1000*y2 - 3* y2**3 + 5*y1*(-240 + y2**2)))))) - 32*x2**3*Math.sqrt( -((8*x2**2*(2*y1 - y2) - 8*x1*x2*y2 + y2**2* (-y1 + y2))**2* (-25*(y1 - y2)**2*y2**4 + 64*x2**6*(-400 + 4*y1**2 - 12*y1*y2 + 9*y2**2) + x1**2*(64*x2**4*(-400 + y2** 2) - 16*x2**2*y2**2* (-100 + y2**2) + y2**4*(-100 + y2**2)) + x2**2*y2**2*(36*y2**2*(-125 + y2**2) + 7*y1**2*(-800 + 7* y2**2) + y1*(10000*y2 - 84* y2**3)) + 16*x2**4* (6*y2**2*(-250 + 3*y2**2) + 2*y1**2*(-200 + 7*y2**2) + y1*(2000*y2 - 33*y2**3)) + 2*x1*x2*(64*x2**4*(400 + 2* y1*y2 - 3*y2**2) + y2**3*(-500*y2 + 6*y2**3 + y1*(600 - 7*y2**2)) + 8*x2**2*y2*(1000*y2 - 3* y2**3 + 5*y1*(-240 + y2**2)))))) + 16*x2*y1*y2* Math.sqrt(-((8*x2**2*(2*y1 - y2) - 8*x1*x2*y2 + y2**2* (-y1 + y2))**2* (-25*(y1 - y2)**2*y2**4 + 64*x2**6*(-400 + 4*y1**2 - 12*y1*y2 + 9*y2**2) + x1**2*(64*x2**4*(-400 + y2** 2) - 16*x2**2*y2**2* (-100 + y2**2) + y2**4*(-100 + y2**2)) + x2**2*y2**2*(36*y2**2*(-125 + y2**2) + 7*y1**2*(-800 + 7* y2**2) + y1*(10000*y2 - 84* y2**3)) + 16*x2**4* (6*y2**2*(-250 + 3*y2**2) + 2*y1**2*(-200 + 7*y2**2) + y1*(2000*y2 - 33*y2**3)) + 2*x1*x2*(64*x2**4*(400 + 2* y1*y2 - 3*y2**2) + y2**3*(-500*y2 + 6*y2**3 + y1*(600 - 7*y2**2)) + 8*x2**2*y2*(1000*y2 - 3* y2**3 + 5*y1*(-240 + y2**2)))))) - 2*x1*y2**2* Math.sqrt(-((8*x2**2*(2*y1 - y2) - 8*x1*x2*y2 + y2**2* (-y1 + y2))**2* (-25*(y1 - y2)**2*y2**4 + 64*x2**6*(-400 + 4*y1**2 - 12*y1*y2 + 9*y2**2) + x1**2*(64*x2**4*(-400 + y2** 2) - 16*x2**2*y2**2* (-100 + y2**2) + y2**4*(-100 + y2**2)) + x2**2*y2**2*(36*y2**2*(-125 + y2**2) + 7*y1**2*(-800 + 7* y2**2) + y1*(10000*y2 - 84* y2**3)) + 16*x2**4* (6*y2**2*(-250 + 3*y2**2) + 2*y1**2*(-200 + 7*y2**2) + y1*(2000*y2 - 33*y2**3)) + 2*x1*x2*(64*x2**4*(400 + 2* y1*y2 - 3*y2**2) + y2**3*(-500*y2 + 6*y2**3 + y1*(600 - 7*y2**2)) + 8*x2**2*y2*(1000*y2 - 3* y2**3 + 5*y1*(-240 + y2**2)))))) - 14*x2*y2**2* Math.sqrt(-((8*x2**2*(2*y1 - y2) - 8*x1*x2*y2 + y2**2* (-y1 + y2))**2* (-25*(y1 - y2)**2*y2**4 + 64*x2**6*(-400 + 4*y1**2 - 12*y1*y2 + 9*y2**2) + x1**2*(64*x2**4*(-400 + y2** 2) - 16*x2**2*y2**2* (-100 + y2**2) + y2**4*(-100 + y2**2)) + x2**2*y2**2*(36*y2**2*(-125 + y2**2) + 7*y1**2*(-800 + 7* y2**2) + y1*(10000*y2 - 84* y2**3)) + 16*x2**4* (6*y2**2*(-250 + 3*y2**2) + 2*y1**2*(-200 + 7*y2**2) + y1*(2000*y2 - 33*y2**3)) + 2*x1*x2*(64*x2**4*(400 + 2* y1*y2 - 3*y2**2) + y2**3*(-500*y2 + 6*y2**3 + y1*(600 - 7*y2**2)) + 8*x2**2*y2*(1000*y2 - 3* y2**3 + 5*y1*(-240 + y2**2)))))))/ ((8*x2**2*(2*y1 - y2) - 8*x1*x2*y2 + y2**2*(-y1 + y2))* (1024*x2**6 + (y1 - y2)**2*y2**4 + 64*x2**4*(4*y1**2 - 20*y1*y2 + 15*y2**2) + 4*x2**2*y2**2* (56*y1**2 - 100*y1*y2 + 45*y2**2) + 4*x1**2*(256*x2**4 - 16*x2**2*y2**2 + y2**4) - 8*x1*x2*(256*x2**4 + (6*y1 - 5*y2)*y2**3 + 16*x2**2*y2*(-6*y1 + 5*y2)))))

sy2 = (2*(512*x1*x2**5*y1 - 512*x2**6*y1 + 256*x1**2*x2**4*y2 - 1024*x1*x2**5*y2 + 768*x2**6*y2 + 256*x2**4*y1**2*y2 + 320*x1*x2**3* y1*y2**2 - 832*x2**4*y1*y2**2 - 48*x1**2*x2**2*y2**3 - 224*x1*x2**3* y2**3 + 528*x2**4*y2**3 + 112*x2**2*y1**2*y2**3 - 30*x1*x2*y1*y2**4 - 194*x2**2*y1* y2**4 + 2*x1**2*y2**5 + 26*x1*x2*y2**5 + 84*x2**2*y2**5 + Math.sqrt(-((8*x2**2*(2*y1 - y2) - 8*x1*x2*y2 + y2**2*(-y1 + y2))**2*(-25*(y1 - y2)**2* y2**4 + 64*x2**6*(-400 + 4*y1**2 - 12*y1*y2 + 9*y2**2) + x1**2* (64*x2**4*(-400 + y2**2) - 16*x2**2*y2**2*(-100 + y2**2) + y2**4*(-100 + y2**2)) + x2**2*y2**2* (36*y2**2*(-125 + y2**2) + 7*y1**2*(-800 + 7*y2**2) + y1*(10000*y2 - 84*y2**3)) + 16*x2**4*(6*y2**2*(-250 + 3*y2**2) + 2*y1**2* (-200 + 7*y2**2) + y1*(2000*y2 - 33*y2**3)) + 2*x1*x2*(64*x2**4*(400 + 2*y1*y2 - 3*y2**2) + y2**3*(-500*y2 + 6*y2**3 + y1*(600 - 7*y2**2)) + 8*x2**2*y2*(1000*y2 - 3*y2**3 + 5*y1*(-240 + y2**2))))))))/ (1024*x2**6 + (y1 - y2)**2*y2**4 + 64*x2**4*(4*y1**2 - 20*y1*y2 + 15*y2**2) + 4*x2**2*y2**2* (56*y1**2 - 100*y1*y2 + 45*y2**2) + 4*x1**2*(256*x2**4 - 16*x2**2*y2**2 + y2**4) - 8*x1*x2*(256*x2**4 + (6*y1 - 5*y2)* y2**3 + 16*x2**2*y2*(-6*y1 + 5*y2)))

  sx, sy =
    if (sx2 - x2)**2 + (sy2 - y2)**2 <= 0.01
      [ sx1, sy1 ]
    else
      [ sx2, sy2 ]
    end

  p [ sx, sy ]

  if sx >= -0.01 && sx <= 0.01 && sy > 0
    puts num_hits
    exit
  end

  num_hits += 1

  x1 = x2
  y1 = y2
  x2 = sx
  y2 = sy
end
